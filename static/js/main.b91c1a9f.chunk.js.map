{"version":3,"sources":["components/ExpenseItems/ExpensesFilter.js","components/UI/Card.js","components/ExpenseItems/ExpenseDate.js","components/ExpenseItems/ExpenseItems.js","components/ExpenseItems/expensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpenseItems/ExpensesChart.js","components/ExpenseItems/Expenses.js","components/NewExpenses/ExpenseFormGenerator.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","defaultSelect","onChange","event","filterChange","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItems","useState","title","setTitle","amount","onClick","ExpenseList","items","length","map","expense","id","ChartBar","barFillheight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredItems","item","filter","toString","yearValue","console","log","ExpenseFromGenerator","enteredTitle","setEnteredTitle","amountTitle","setAmountTitle","dateTitle","setDateTitle","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancelProp","NewExpenses","isEditing","setIsEditing","eventExpenseData","enteredData","random","onAddExpenseData","dummyExpenses","App","setExpenses","eventData","prevState","ReactDOM","createRoot","document","getElementById","render"],"mappings":"ibAwBeA,EApBQ,SAACC,GAKtB,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQC,MAAOF,EAAMG,cAAeC,SARZ,SAACC,GAC7BL,EAAMM,aAAaD,EAAME,OAAOL,QAO5B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2BCXKM,G,YAJF,SAACR,GACV,IAAMS,EAAU,QAAUT,EAAMC,UAChC,OAAO,qBAAKA,UAAWQ,EAAhB,SAA0BT,EAAMU,a,YCa5BC,MAff,SAAqBX,GACjB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAQ,CAACF,MAAM,SACjDG,EAAMf,EAAMa,KAAKC,eAAe,QAAQ,CAACC,IAAI,YAC7CC,EAAOhB,EAAMa,KAAKI,cAExB,OACI,sBAAKhB,UAAU,gBAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsCW,IACtC,qBAAKX,UAAU,oBAAf,SAAoCc,IACpC,qBAAKd,UAAU,qBAAf,SAAqCe,QCiBlCE,MAtBf,SAAsBlB,GACpB,MAAyBmB,mBAASnB,EAAMoB,OAAxC,mBAAOA,EAAP,KAAaC,EAAb,KAKA,OACE,8BAEA,eAAC,EAAD,CAAMpB,UAAU,eAAhB,UACG,cAAC,EAAD,CAAaY,KAAMb,EAAMa,OAE1B,sBAAKZ,UAAU,4BAAf,UACE,6BAAKmB,IACL,qBAAKnB,UAAU,sBAAf,SAAsCD,EAAMsB,YAE9C,wBAAQC,QAbS,WACnBF,EAAS,cAYP,4BCDSG,G,MAnBK,SAACxB,GAEnB,OAA2B,IAAvBA,EAAMyB,MAAMC,OACP,oBAAIzB,UAAU,0BAAd,gCAGP,6BACGD,EAAMyB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEER,MAAOQ,EAAQR,MACfE,OAAQM,EAAQN,OAChBT,KAAMe,EAAQf,MAHTe,EAAQC,W,OCSRC,G,MAjBE,SAAC9B,GAEd,IAAI+B,EAAgB,KAItB,OAHM/B,EAAMgC,SAAW,IACjBD,EAAgBE,KAAKC,MAAOlC,EAAME,MAAMF,EAAMgC,SAAU,KAAO,KAGnE,sBAAK/B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkBkC,MAAO,CAACC,OAASL,OAElD,qBAAK9B,UAAU,mBAAf,SAAmCD,EAAMqC,aCQlCC,G,MAlBD,SAACtC,GACX,IAAMuC,EAAkBvC,EAAMwC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUvC,SAC9DwC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEnC,OACE,qBAAKtC,UAAU,QAAf,SACGD,EAAMwC,WAAWb,KAAI,SAACc,GAAD,OACpB,cAAC,EAAD,CAEEvC,MAAOuC,EAAUvC,MACjB8B,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCgBVO,EA1BM,SAAA5C,GAEjB,IAFyB,EAEnB6C,EAAkB,CACpB,CAACR,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,GACvB,CAACmC,MAAQ,MAAOnC,MAAO,IAdF,cAkBHF,EAAM8C,UAlBH,IAkBzB,2BAAqC,CAAC,IAA3BlB,EAA0B,QAEjCiB,EADqBjB,EAAQf,KAAKkC,YACJ7C,OAAS0B,EAAQN,QApB1B,8BAuBzB,OAAO,cAAC,EAAD,CAAOkB,WAAcK,KCkBjBG,MAnCf,SAAkBhD,GAChB,MAAwCmB,mBAAS,QAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAOMC,EAAgBnD,EAAMoD,KAAKC,QAAO,SAACzB,GACvC,OAAOA,EAAQf,KAAKI,cAAcqC,aAAeL,KAMnD,OAEE,aADA,CACA,eACA,cAAC,EAAD,CAAMhD,UAAU,WAAhB,SACE,gCACE,cAAC,EAAD,CACEE,cAAe8C,EACf3C,aAnBoB,SAACiD,GAC3BC,QAAQC,IAAIF,GACZL,EAAgBK,MAmBZ,cAAC,EAAD,CAAcT,SAAWK,IACzB,cAAC,EAAD,CAAa1B,MAAO0B,Y,OC+BbO,G,YA7Dc,SAAC1D,GAE1B,MAAwCmB,mBAAS,IAAjD,mBAAOwC,EAAP,KAAqBC,EAArB,KACA,EAAsCzC,mBAAS,IAA/C,mBAAO0C,EAAP,KAAoBC,EAApB,KACA,EAAkC3C,mBAAS,IAA3C,mBAAO4C,EAAP,KAAkBC,EAAlB,KAgCF,OACE,uBAAMC,SAnBc,SAAC5D,GAGnBA,EAAM6D,iBAEN,IAAMC,EAAc,CAChB/C,MAAQuC,EACRrC,QAAUuC,EACVhD,KAAO,IAAIuD,KAAKL,IAEpB/D,EAAMqE,kBAAkBF,GACxBX,QAAQC,IAAI,4BAA4BU,GACxCP,EAAgB,IAChBE,EAAe,IACfE,EAAa,KAKf,UACE,sBAAK/D,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAOqE,KAAK,OAAOpE,MAASyD,EAAcvD,SAnC7B,SAACC,GAEpBuD,EAAgBvD,EAAME,OAAOL,aAmCzB,sBAAKD,UAAU,uBAAf,UACE,2CACA,uBAAOqE,KAAK,SAASC,IAAI,OAAOC,KAAK,OAAOtE,MAAS2D,EAAazD,SAnCpD,SAACC,GAErByD,EAAezD,EAAME,OAAOL,aAmCxB,sBAAKD,UAAU,uBAAf,UACE,yCACA,uBAAOqE,KAAK,OAAOC,IAAI,aAAa5B,IAAI,aAAazC,MAAS6D,EAAW3D,SAnC7D,SAACC,GAEnB2D,EAAa3D,EAAME,OAAOL,gBAoCxB,qBAAKD,UAAU,uBAAf,SACE,wBAAQqE,KAAK,SAAb,2BAEF,qBAAKrE,UAAU,uBAAf,SACE,wBAAQqE,KAAK,SAAS/C,QAASvB,EAAMyE,aAArC,2BCtBOC,MAhCf,SAAqB1E,GAErB,MAAkCmB,oBAAS,GAA3C,mBAAOwD,EAAP,KAAkBC,EAAlB,KAoBI,OACI,sBAAK3E,UAAU,cAAf,WACM0E,GAAa,wBAAQpD,QARH,WACxBqD,GAAa,IAOM,6BACfD,GAAa,cAAC,EAAD,CAAsBN,kBArBV,SAACQ,GAC9BrB,QAAQC,IAAIoB,GACZ,IAAMC,EAAW,aACbjD,GAAII,KAAK8C,SAASzB,YACfuB,GAGP7E,EAAMgF,iBAAiBF,GACvBF,GAAa,GACbpB,QAAQC,IAAI,cAAcqB,IAY4DL,aAN3D,WAC3BG,GAAa,UCrBfK,EAAgB,CACpB,CACEpD,GAAI,KACJT,MAAO,eACPE,OAAQ,MACRT,KAAM,IAAIuD,KAAK,KAAM,EAAG,KAE1B,CAAEvC,GAAI,KAAMT,MAAO,SAAUE,OAAQ,OAAQT,KAAM,IAAIuD,KAAK,KAAM,EAAG,KACrE,CACEvC,GAAI,KACJT,MAAO,gBACPE,OAAQ,OACRT,KAAM,IAAIuD,KAAK,KAAM,EAAG,KAE1B,CACEvC,GAAI,KACJT,MAAO,oBACPE,OAAQ,IACRT,KAAM,IAAIuD,KAAK,KAAM,EAAG,MAwBbc,MApBf,WAEE,MAAgC/D,mBAAS8D,GAAzC,mBAAOnC,EAAP,KAAiBqC,EAAjB,KAUA,OACE,gCACF,cAAC,EAAD,CAAcH,iBAVkB,SAACI,GAC/B5B,QAAQC,IAAI,YAAa2B,GACzB5B,QAAQC,IAAR,CAAa2B,GAAb,OAA0BH,IAC1BE,GAAY,SAACE,GACX,MAAM,GAAN,mBAAYA,GAAZ,CAAuBD,UAO3B,cAAC,EAAD,CAAUhC,KAAQN,QCpCPwC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.b91c1a9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) =>{\r\n    props.filterChange(event.target.value);\r\n    \r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.defaultSelect} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","//for round corner and shadow\r\nimport './Card.css'\r\nconst Card = (props) => { //arrow function also works\r\n    const classes = 'card ' + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\nexport default Card;","import \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-IN',{month:'long'}); //January, august,etc\r\n    const day = props.date.toLocaleString('en-IN',{day:'2-digit'}); //11,08.etc\r\n    const year = props.date.getFullYear();  //2015,2020\r\n\r\n    return(\r\n        <div className=\"expense-date \">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n           \r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ExpenseDate;","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseItems.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n// using parameter to accept object and use its properties\r\nfunction ExpenseItems(props) {\r\n  const [title,setTitle] = useState(props.title);    //gets a default state value\r\n  \r\n  const clickHandler = () => {\r\n    setTitle('updated!!');\r\n  };\r\n  return (\r\n    <div>\r\n      \r\n    <Card className=\"expense-item\">\r\n       <ExpenseDate date={props.date} />\r\n\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n      <button onClick={clickHandler}> Button </button>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseItems;\r\n","import ExpenseItems from \"./ExpenseItems\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpenseList = (props) => {\r\n  // let expenseContent = <p>No Expense Found</p>;\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItems\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillheight = '0%';\r\n    if (props.maxValue > 0){\r\n        barFillheight = Math.round((props.value/props.maxValue)*100) + '%';\r\n    }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height : barFillheight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n        key = {dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n import Chart from '../Chart/Chart';\r\nconst ExpenseChart = props =>{\r\n    // array of data points with initial \r\n    const chartDataPoints = [\r\n        {label : 'Jan', value: 0},\r\n        {label : 'Feb', value: 0},\r\n        {label : 'Mar', value: 0},\r\n        {label : 'Apr', value: 0},\r\n        {label : 'May', value: 0},\r\n        {label : 'Jun', value: 0},\r\n        {label : 'Jul', value: 0},\r\n        {label : 'Aug', value: 0},\r\n        {label : 'Sep', value: 0},\r\n        {label : 'Oct', value: 0},\r\n        {label : 'Nov', value: 0},\r\n        {label : 'Dec', value: 0},\r\n\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => january\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints = {chartDataPoints} />\r\n};\r\n\r\nexport default ExpenseChart;","import React, { useState } from \"react\";\r\n// import ExpenseItems from \"./ExpenseItems\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseList from \"./expensesList\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (yearValue) => {\r\n    console.log(yearValue);\r\n    setFilteredYear(yearValue);\r\n  };\r\n\r\n  const filteredItems = props.item.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  // console.log(filteredItems);\r\n\r\n  \r\n\r\n  return (\r\n    // rendering dev to a list item instead\r\n    <li>\r\n    <Card className=\"expenses\">\r\n      <div>\r\n        <ExpensesFilter\r\n          defaultSelect={filteredYear}\r\n          filterChange={filterChangeHandler}\r\n        />\r\n        <ExpenseChart expenses ={filteredItems} />\r\n        <ExpenseList items={filteredItems}/>\r\n\r\n      </div>\r\n      {/* <h2>Let's get started!</h2> */}\r\n      \r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseFormGenerator.css\";\r\n\r\nconst ExpenseFromGenerator = (props) => {\r\n \r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [amountTitle, setAmountTitle] = useState('');\r\n    const [dateTitle, setDateTitle] = useState('');\r\n    \r\n  const inputHandler = (event) => {\r\n    // console.log(event.target.value);\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountHandler = (event) => {\r\n    // console.log(event.target.value);\r\n    setAmountTitle(event.target.value)\r\n  };\r\n  const dateHandler = (event) => {\r\n    // console.log(event.target.value);\r\n    setDateTitle(event.target.value)\r\n  };\r\n  const submitHandler = (event) =>{\r\n      \r\n    //   console.log(event); \r\n      event.preventDefault();\r\n      //object for storing the data\r\n      const expenseData = {\r\n          title : enteredTitle,\r\n          amount : +amountTitle,\r\n          date : new Date(dateTitle),\r\n      }\r\n      props.onSaveExpenseData(expenseData);\r\n      console.log('in expense form generator',expenseData);\r\n      setEnteredTitle(''); //overwrite what user entered\r\n      setAmountTitle('');\r\n      setDateTitle('');\r\n\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value = {enteredTitle} onChange={inputHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value = {amountTitle} onChange={amountHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2022-01-01\" max=\"2024-12-31\" value = {dateTitle} onChange={dateHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancelProp}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseFromGenerator;\r\n","import React, {useState} from \"react\";\r\nimport './NewExpenses.css'\r\nimport ExpenseFromGenerator from \"./ExpenseFormGenerator\";\r\n\r\n\r\nfunction NewExpenses(props){\r\n\r\nconst [isEditing, setIsEditing] = useState(false);\r\n    \r\n    const onSaveExpenseDataHandler = (eventExpenseData)=>{\r\n        console.log(eventExpenseData);\r\n        const enteredData = {\r\n            id: Math.random().toString(),\r\n            ...eventExpenseData,\r\n           \r\n        };\r\n        props.onAddExpenseData(enteredData);\r\n        setIsEditing(false);\r\n        console.log('new expense',enteredData);\r\n    };\r\n    \r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n        const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n    return(\r\n        <div className=\"new-expense\">\r\n           { !isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n           {isEditing && <ExpenseFromGenerator onSaveExpenseData = {onSaveExpenseDataHandler} onCancelProp = {stopEditingHandler} />}\r\n           </div>\r\n    );\r\n   \r\n    \r\n}\r\n\r\nexport default NewExpenses;","import React, { useState } from \"react\";\nimport Expenses from \"./components/ExpenseItems/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\n//dummy expenses\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  //dynamically add data using states\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const onAddExpenseDataHandler = (eventData) =>{\n    console.log('in app js', eventData);\n    console.log([eventData,...dummyExpenses]);\n    setExpenses((prevState) => {\n      return [ ...prevState, eventData];\n    });\n  \n  };\n  return(\n    <div>\n  <NewExpenses  onAddExpenseData = {onAddExpenseDataHandler} /> \n  <Expenses item = {expenses}></Expenses>\n  </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}